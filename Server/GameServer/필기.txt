❤️OT❤️
❗핵심은 다른 프로젝트의 내용을 참조하여 쓴다는 것
수단: 포함디렉토리, 라이브러리디렉토리, #include

❗Types.h
목적: 매크로 지정 (longlong-> int64)
매크로사용 이유: longlong, short쓰는 것 보다 int에 숫자붙이는 게 직관적 & 편리

❗pch(precompiled header)
헤더: 프로젝트속성->미리컴파일된헤더에서 지정해주기.
cpp: 프로젝트속성->미리컴파일된헤더->만들기

❗포함 디렉토리 (Include Directories)
**헤더파일을 #include해야하는 건 똑같지만, 접두사가 생략되는 장점이있다**
목적: 이 설정은 컴파일러가 소스 코드를 컴파일할 때 참조하는 헤더 파일(.h)의 위치를 지정합니다. 헤더 파일은 클래스, 함수, 상수 등의 선언을 포함하고 있어 소스 코드에서 이들을 사용할 수 있게 해 줍니다.
사용 예: 예를 들어, 프로젝트가 외부 라이브러리를 사용하는 경우 해당 라이브러리의 헤더 파일이 저장된 디렉토리를 포함 디렉토리에 추가해야 컴파일러가 이를 찾을 수 있습니다.

❗라이브러리 디렉토리 (Library Directories)
**.lib란? : .lib 파일에는 컴파일된 코드, 데이터, 그리고 함수의 구현이 포함되어 있어, 애플리케이션을 빌드할 때 필요한 코드와 데이터를 제공
목적: 이 설정은 링커가 프로그램을 최종적으로 생성할 때 필요한 라이브러리 파일(.lib)의 위치를 지정합니다. 라이브러리 파일은 헤더 파일에 선언된 함수나 변수의 구현(정의)을 포함합니다.
사용 예: 만약 프로젝트가 DirectX, OpenGL과 같은 그래픽스 라이브러리를 사용한다면, 이러한 라이브러리들의 .lib 파일들을 링커가 접근할 수 있도록 라이브러리 디렉토리를 설정해 주어야 합니다.

❗출력디렉토리
빌드했을 때, 어느 폴더에 결과물이 찍힐것인지 지정. 해당 프로젝트에서는 binary에 지정했다.